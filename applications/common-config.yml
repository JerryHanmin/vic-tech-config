---
spring:
  profiles: eureka_server
eureka:
  server:
    renewal-threshold-update-interval-ms: 10000
    peer-eureka-nodes-update-interval-ms: 30000
    wait-time-in-ms-when-sync-empty: 0
    registry-sync-retries: 3
    enable-self-preservation: false

---
spring:
  profiles: eureka_client
eureka:
  instance:
    hostname: localhost
    appname: ${spring.application.name}
    virtualHostName: ${spring.application.name}
    #appGroupName: default-group
    preferIpAddress: true
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}
  client:
    region: default
    registryFetchIntervalSeconds: 5
    availabilityZones:
      default: ${APPLICATION_DOMAIN:${DOMAIN:defaultZone}}
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${service.eureka.uri:http://localhost:8761/discovery/eureka/}

---
spring:
  profiles: redis
  redis:
    host: ${service.redis.host}

---
spring:
  profiles: mongo
  data:
    mongodb:
      uri: ${service.mongodb.uri}

---
spring:
  profiles: mysql
  datasource:
    url: jdbc:mysql://${service.mysql.host}/${service.mysql.database}?characterEncoding=UTF-8
    username: ${service.mysql.username}
    password: ${service.mysql.password}
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    show_sql: true
    open-in-view: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: MySQL5
        format_sql: true
        use_sql_comments: true
        globally_quoted_identifiers: true


---
spring:
  profiles: oauth2

security:
  oauth2:
    resource:
      filter-order: 3

service:
  local:
    signing-key: hm
    token-store: redis

logging:
  level:
    org.springframework.security: DEBUG


---
spring:
  profiles: web_gateway

service:
  oauth2:
    client-id: webapp
    client-secret: webapp
    resource-id: web-resource
---
spring:
  profiles: common

spring:
  validation_messages:
    basename: i18n/validation_messages
  messages:
    basename: i18n/messages